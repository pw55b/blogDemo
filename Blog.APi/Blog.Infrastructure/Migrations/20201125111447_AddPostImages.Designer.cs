// <auto-generated />
using System;
using Blog.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Infrastructure.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20201125111447_AddPostImages")]
    partial class AddPostImages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2702cea-c9fc-4bbd-a755-53ea629c5c84"),
                            Author = "Dave",
                            Content = "Post Content 1",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 317, DateTimeKind.Local).AddTicks(4979),
                            Title = "Post Title 1"
                        },
                        new
                        {
                            Id = new Guid("0e419caa-22f7-41ac-8ee6-44e6e3ba27c8"),
                            Author = "Dave",
                            Content = "Post Content 2",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 319, DateTimeKind.Local).AddTicks(1782),
                            Title = "Post Title 2"
                        },
                        new
                        {
                            Id = new Guid("0a7fe9e9-f8cb-4237-a1ac-948e0ccf76f2"),
                            Author = "Dave",
                            Content = "Post Content 3",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 319, DateTimeKind.Local).AddTicks(1822),
                            Title = "Post Title 3"
                        },
                        new
                        {
                            Id = new Guid("0aa35bd0-c08f-485c-bdd8-62fc9cba9837"),
                            Author = "Dave",
                            Content = "Post Content 4",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 319, DateTimeKind.Local).AddTicks(1827),
                            Title = "Post Title 4"
                        },
                        new
                        {
                            Id = new Guid("d4b22650-8527-4325-b6b3-15828255dc47"),
                            Author = "Dave",
                            Content = "Post Content 5",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 319, DateTimeKind.Local).AddTicks(1830),
                            Title = "Post Title 5"
                        },
                        new
                        {
                            Id = new Guid("0ee57ed6-5f8b-49f7-933c-06d09e71ad1e"),
                            Author = "Dave",
                            Content = "Post Content 6",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 319, DateTimeKind.Local).AddTicks(1835),
                            Title = "Post Title 6"
                        },
                        new
                        {
                            Id = new Guid("13ff2270-7776-4442-83bf-551d8bc72ff8"),
                            Author = "Dave",
                            Content = "Post Content 7",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 319, DateTimeKind.Local).AddTicks(1839),
                            Title = "Post Title 7"
                        },
                        new
                        {
                            Id = new Guid("7f886dc4-48f9-479c-b10c-edb4451bfcbb"),
                            Author = "Dave",
                            Content = "Post Content 8",
                            LastModified = new DateTime(2020, 11, 25, 19, 14, 47, 319, DateTimeKind.Local).AddTicks(1842),
                            Title = "Post Title 8"
                        });
                });

            modelBuilder.Entity("Blog.Core.Entities.PostImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PostImages");
                });
#pragma warning restore 612, 618
        }
    }
}
